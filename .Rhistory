contributors()
install.packages("igraph")
library(igraph)
g <- graph.formula(
"dis" --+ "Luis Capelo"
)
g <- set.graph.attribute(g, "layout", value = layout.fruchterman.reingold(g))
g <- set.vertex.attribute(g, "size", value = 6)
g <- set.vertex.attribute(g, "label.dist", value = 0.7)
g <- set.edge.attribute(g, "arrow.size", value = 0.5)
plot(g)
library(igraph)
g <- graph.formula(
"dis" --+ "Luis Capelo"
)
g <- set.graph.attribute(g, "layout", value = layout.fruchterman.reingold(g))
g <- set.vertex.attribute(g, "size", value = 6)
g <- set.vertex.attribute(g, "label.dist", value = 0.7)
g <- set.edge.attribute(g, "arrow.size", value = 0.5)
plot(g)
library(igraph)
g <- graph.formula(
"dis" --+ "Luis Capelo"
"teste" --+ "Luis Capelo"
)
g <- set.graph.attribute(g, "layout", value = layout.fruchterman.reingold(g))
g <- set.vertex.attribute(g, "size", value = 6)
g <- set.vertex.attribute(g, "label.dist", value = 0.7)
g <- set.edge.attribute(g, "arrow.size", value = 0.5)
plot(g)
library(igraph)
g <- graph.formula(
"dis" --+ "Luis Capelo",
"teste" --+ "Luis Capelo"
)
g <- set.graph.attribute(g, "layout", value = layout.fruchterman.reingold(g))
g <- set.vertex.attribute(g, "size", value = 6)
g <- set.vertex.attribute(g, "label.dist", value = 0.7)
g <- set.edge.attribute(g, "arrow.size", value = 0.5)
plot(g)
install.packages("Zelig")
q()
load("~/Documents/Jobs + Applications/OCHA : CRD/Data and Analysis Project/Data/ScraperWiki/scraperwiki_utils.R")
load("~/Documents/Jobs + Applications/OCHA : CRD/Data and Analysis Project/Data/ScraperWiki/UN-data-functions.R")
install.packages("ggplot2")
demo()
1+2
# Basic mathematical operations
3 + 4
5 * 5
12 / 3
5^5
# R objects
# Vector
## Most basic object in R
## Contains elements of the same class
## Can be: character, numeric, integer, complex, logical(True/False))
# Create a vector
v=c(1,3,5,7)
v
v
# List
## (Vector with different class of objects)
l=c("Blue", 2, 5, "Red")
l
# Create a matrix
m=matrix(1:6,2,3)
m
## Matrix creation is column-wise
# Create a matrix from a vector
m2=matrix(1:6)
# Then add dimensionality
dim(m2)=c(2,3)
m2
# Create a matrix by binding columns or rows
x=1:6
y=5:10
cbind(x,y) # by column
rbind(x,y) # by row
# Check the attributes
attributes(m)
# Call a particular cell in a matrix
m
m[1,2]
# Dataframes
## Different than matrices => can store different classes of objects
## Usually called with read.table()
# Create a dataframe
d=data.frame(subjectID=1:5,gender=c("M","F","F","M","F"),score=c(8,3,6,5,5))
d
# Number of rows
nrow(d)
# Number of columns
ncol(d)
# Check the attributes
attributes(d)
# Call a particular cell in a dataframe
d[2,1]
d[1,2]
# Display dataframe
View(d)
# Edit dataframe
edit(d)
# Getting help on a function
?functionname
?edi
?edit
# Load package
library(psych)
# Download and install packages
install.packages("psych") ## Need to specify CRAN the 1st time
# Load package
library(psych)
install.packages(c("class", "colorspace", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "Zelig"))
packages()
packages()
?library
library()
?data.frame
numbers=c[1:10]
numbers=c(1:10)
numbers
words=c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
words
d=data.frame(subjectID=1:10, numbers=c(numbers), words=c(words))
d
d=data.frame(numbers=c(numbers), words=c(words))
d
nw=data.frame(numbers=c(numbers), words=c(words))
nw
attributes(nw)
numbers=c(1:10)
words=c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw=data.frame(numbers=c(numbers), words=c(words))
attributes(nw)
nw[8]
nw[8,1]
nw[8,1]
nw[8,2]
nw[8,2]
a=matrix(1:10)
a
dim(a)=c(2,3)
dim(a)=c(2,5)
a
dim(a)=c(2,5)
a
x=c(1:6)
y=c(5:10)
x
y
cbind(x,y)
rbind(x,y)
x=c(1:6)
y=c(5:10)
rbind(x,y)
x=c(1:6)
y=c(5:10)
cbind(x,y)
install.package(car)
install.packages(r)
install.packages(car)
?install.packages
?libraries
?library
library(car)
library()
library()
?data.frame
numbers=c(1:10)
words=c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw=data.frame(numbers=c(numbers),words=c(words))
attributes(nw)
nw
d=[2,8]
nw[2,8]
d[2,8]
nw
nw[1,8]
nw[8,1]
nw[1,8]
nw[8,2]
a=matrix(1:10)
dim(a)=c(2,5)
a
a=matrix(1:10)
dim(a)=c(2,5)
a
rbind(x,y)
cbind(x,y)
?install.packages
?install.packages("car")
install.packages("car")
search()
packages("car")
installpackages("car")
install.packages("car")
library(car)
library()
search()
library()
search()
numbers=c(1:10)
words=c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw=data.frame(numbers=c(numbers),words=c(words))
attributes(nw)
nw
a=matrix(1:10)
dim(a)=c(2,5)
a
x=c(1:6)
y=c(5:10)
rbind(x,y)
cbind(x,y)
numbers=c(1:10), words=c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten"), nw=data.frame(numbers=c(numbers),words=c(words)), attributes(nw)
dim=(a=(matrix(1:10))=c(2,5)
dim(a=(matrix(1:10))=c(2,5)
dim(matrix(1:10)=c(2,5)
dim(matrix(1:10)=(2,5)
dim(matrix(1:10)
(2,5)
a=dim(matrix(1:10))
a
a=dim(matrix(1:10))=c(2,5)
a=dim(matrix(1:10))=c(2,5)
a=dim(matrix(1:10))=(2,5)
a=matrix(1:10)
dim(a)=c(2,5)
a
a=matrix(1:10)
a
a=matrix(1:2,3:4,4:5,5:6,7:8,9:10)
m=matrix(1:6,2,3)
m
a=matrix(1:10,2,5)
a
hist(x)
x <- rnorm(100)
hist(x)
?open
ls
cd
?open
open.file
?open(file)
?open(file = "csv.scv")
open(file = "csv.scv")
open(file="csv.scv")
install.package("wnominate")
install.packages("wnominate")
t <- c("humanitariandata")
nchar(t)
WDIsearch('population')
library(WDI)
WDIsearch('population')
WDIsearch('population total')
WDIsearch('population')
WDIsearch('Population, millions')
data <- WDI(indicator="SPPOPTOTL", country=c('SO'), start=1960, end=2013)
data <- WDI(indicator='SPPOPTOTL', country=c('SO'), start=1960, end=2013)
data <- WDI(indicator='SPPOPTOTL', country=c('SY'), start=1960, end=2013)
WDIserach('SPPOPTOTL')
WDIsearch('SPPOPTOTL')
WDIsearch('population millions')
WDIsearch('Population, millions')
WDIsearch('SPPOPTOTL')
data <- WDI(indicator='SPPOPTOTL', country=c('SY'), start=1960, end=2012)
library(WDI)
WDI(indicator='SP.POP.TOTL', country=c('SO'), start=1960, end=2013)
data <- WDI(indicator='SP.POP.TOTL', country=c('SO'), start=1960, end=2013)
ggplot(data, (x=year, y=SP.POP.TOTL))
ggplot(data, aes(x=year, y=SP.POP.TOTL))
library(ggplot2)
ggplot(data, aes(x=year, y=SP.POP.TOTL))
ggplot(data, aes(x=SP.POP.TOTL, y=year))
ggplot(data, aes(year, SP.POP.TOTL))
ggplot(data, aes(year, SP.POP.TOTL)) + geom.line()
ggplot(data, aes(year, SP.POP.TOTL)) + geom_line()
View(data)
install.packages("RCURL")
install.packages("RCurl")
install.packages("lubridate")
install.packages('shiny')
install.packages('tester')
library(tester)
is_positive(1)
is_integer('banana')
is_matrix(x)
install.packages('rcharts')
require(devtools)
install.package('devtools')
install.packages('devtools')
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages('slidify')
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
setwd("~/Documents/Programming/Crisi-and-Risk-Indexes_Study")
library(ggplot2)
library(WDI)
library(countrycode)
echo <- read.csv("data/echo_gna_index.csv", header=T)
gfm <- read.csv("data/global_focus_model_2013.csv", header=T)
inform <- read.csv("data/inform_risk_index_2013.csv", header=T)
unu <- read.csv("data/unu_world_risk_index.csv", header=T)
Adding ISO3 Numbers to all datasets. ####
iso3 <- countrycode(gfm$Country, "country.name", "iso3c")
gfm <- cbind(iso3,gfm)
iso3 <- countrycode(unu$Country, "country.name", "iso3c")
unu <- cbind(iso3,unu)
# Creating comarable data.frame based on iso3 codes. ####
data <- merge(echo, gfm, by='iso3')
data <- merge(data, inform, by='iso3')
data <- merge(data, unu, by='iso3')
cor(data$WorldRiskIndex, data$Risk, use='pairwise.complete.obs')
cor(data$WorldRiskIndex, data$Risk, use='pairwise.complete.obs')
summary(data$WorldRiskIndex)
ggplot(data, aes(x=WorldRiskIndex, y=Risk)) +
geom_text(aes(label=iso3),
size = 2.5, fontface = "bold",
vjust = 0,
color = "grey",
position = position_jitter(w = 0.4, h = 0.4)) +
stat_smooth(method="lm", se=FALSE) +
geom_point(aes(color=Region, size=Focus)) +
labs(x = "UNU World Risk Index",
y = "InfoRM 2013",
title = "GFM vs. InfoRM (2013)"
) +
annotate("text",
x = 2.3,
y = 8,
label = "R (correlation) = ###",
fontface = "italic",
size = 4
)
View(data)
data <- merge(data, unu, by='iso3')
iso3 <- countrycode(unu$Country, "country.name", "iso3c")
unu <- cbind(iso3,unu)
data <- merge(data, unu, by='iso3')
View(data)
View(data)
data <- merge(data, unu, by='iso3')
View(unu)
unu <- read.csv("data/unu_world_risk_index.csv", header=T)
View(unu)
data <- merge(data, unu, by='iso3')
cor(data$WorldRiskIndex, data$Risk, use='pairwise.complete.obs')
ggplot(data, aes(x=WorldRiskIndex, y=Risk)) +
geom_text(aes(label=iso3),
size = 2.5, fontface = "bold",
vjust = 0,
color = "grey",
position = position_jitter(w = 0.4, h = 0.4)) +
stat_smooth(method="lm", se=FALSE) +
geom_point(aes(color=Region, size=Focus)) +
labs(x = "UNU World Risk Index",
y = "InfoRM 2013",
title = "GFM vs. InfoRM (2013)"
) +
annotate("text",
x = 2.3,
y = 8,
label = "R (correlation) = ###",
fontface = "italic",
size = 4
)
ggplot(data, aes(x=WorldRiskIndex, y=Risk)) +
geom_text(aes(label=iso3),
size = 2.5, fontface = "bold",
vjust = 0,
color = "grey",
position = position_jitter(w = 0.4, h = 0.4)) +
stat_smooth(method="lm", se=FALSE) +
geom_point(aes(color=Region, size=Focus)) +
labs(x = "UNU World Risk Index",
y = "InfoRM 2013",
title = "GFM vs. InfoRM (2013)"
) +
annotate("text",
x = 26,
y = 7,
label = "R (correlation) = 0.8",
fontface = "italic",
size = 4
)
View(data)
cor(data$GNA.Final.Index, data$Risk, use='pairwise.complete.obs') ## 0.1744695
ggplot(data, aes(x=GNA.Final.Index, y=Risk)) +
geom_text(aes(label=iso3),
size = 2.5, fontface = "bold",
vjust = 0,
color = "grey",
position = position_jitter(w = 0.4, h = 0.4)) +
stat_smooth(method="lm", se=FALSE) +
geom_point(aes(color=Region, size=Focus)) +
labs(x = "ECHO GNA Risk Index",
y = "InfoRM 2013",
title = "GFM vs. InfoRM (2013)"
) +
annotate("text",
x = 26,
y = 7,
label = "R (correlation) = 0.8",
fontface = "italic",
size = 4
)
ggplot(data, aes(x=GNA.Final.Index, y=RISK)) +
geom_text(aes(label=iso3),
size = 2.5, fontface = "bold",
vjust = 0,
color = "grey",
position = position_jitter(w = 0.4, h = 0.4)) +
stat_smooth(method="lm", se=FALSE) +
geom_point(aes(color=Region, size=Focus)) +
labs(x = "ECHO GNA Risk Index",
y = "GFM",
title = "GFM vs. InfoRM (2013)"
) +
annotate("text",
x = 26,
y = 7,
label = "R (correlation) = 0.8",
fontface = "italic",
size = 4
)
View(inform)
colname(inform)[1] <- iso3
colname(inform)[1] <- "iso3"
colname(inform)[1]
colnames(inform)[1]
colnames(inform)[1] <- "iso3"
data <- merge(data, inform, by='iso3')
ggplot(data, aes(x=GNA.Final.Index, y=RISK)) +
geom_text(aes(label=iso3),
size = 2.5, fontface = "bold",
vjust = 0,
color = "grey",
position = position_jitter(w = 0.4, h = 0.4)) +
stat_smooth(method="lm", se=FALSE) +
geom_point(aes(color=Region, size=Focus)) +
labs(x = "ECHO GNA Risk Index",
y = "GFM",
title = "GFM vs. InfoRM (2013)"
) +
annotate("text",
x = 26,
y = 7,
label = "R (correlation) = 0.8",
fontface = "italic",
size = 4
)
ggplot(data, aes(x=WorldRiskIndex, y=RISK)) +
geom_text(aes(label=iso3),
size = 2.5, fontface = "bold",
vjust = 0,
color = "grey",
position = position_jitter(w = 0.4, h = 0.4)) +
stat_smooth(method="lm", se=FALSE) +
geom_point(aes(color=Region, size=Focus)) +
labs(x = "ECHO GNA Risk Index",
y = "GFM",
title = "GFM vs. InfoRM (2013)"
) +
annotate("text",
x = 26,
y = 7,
label = "R (correlation) = 0.8",
fontface = "italic",
size = 4
)
